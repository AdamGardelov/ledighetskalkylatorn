@page "/"
@using Ledighetskalkylatorn.Enums;
@using Ledighetskalkylatorn.Services
@using Ledighetskalkylatorn.Models
@inject IFreedomService FreedomService
@inject IJSRuntime JSRuntime

<div class="parent-container">
    <div class="date-picker-form">
        <EditForm Model="@_dateRange" OnValidSubmit="@HandleValidSubmit">
            <p>Fyll i från och tilldatum för att ta reda på antal dagar du behöver ta ledigt &#x1F334;</p>
            <div class="date-picker-row">
                <div class="date-picker-group">
                    <InputDate @bind-Value="_dateRange.StartDate" id="startDate" class="form-control" />
                </div>

                <div class="date-picker-group">
                    <InputDate @bind-Value="_dateRange.EndDate" id="endDate" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Beräkna</button>
            </div>
        </EditForm>
    </div>

    @if (!string.IsNullOrWhiteSpace(_message))
    {
        <div class="alert alert-@_messageType" role="alert">
            @((MarkupString)_message)
        </div>
    }

    @if (_redDays.Any() || _workDays.Any())
    {
        <div class="results-container">

            @if (_workDays.Any())
            {
                <h6>Arbetsdagar att ta ledigt (@_workDays.Count) &#x1F3D6;&#xFE0F;</h6>
                @foreach (var day in _workDays)
                {
                    <p class="work-day">@day.ToString("yyyy-MM-dd")</p>
                }

                <button @onclick="CopyWorkingDays" class="btn btn-secondary btn-sm">
                    Kopiera 
                    <span class="oi oi-document" aria-hidden="true"></span>
                </button>
            }

            @if (_redDays.Any())
            {
                <h6>Röda dagar (@_redDays.Count) &#x1F389;</h6>
                @foreach (var day in _redDays)
                {
                    <p class="red-day">@day.Date.ToString("yyyy-MM-dd") - @day.Description</p>
                }
            }
            @if (_weekendDays.Any())
            {
                <h6>Helgdagar (@_weekendDays.Count) &#x1F4C5;</h6>
                @foreach (var day in _weekendDays)
                {
                    <p class="red-day">@day.Date.ToString("yyyy-MM-dd") - @day.Description</p>
                }
            }
        </div>
    }
</div>


@code {
    private readonly DateRangeModel _dateRange = new();
    private List<DayOffModel> _redDays = new();
    private List<DayOffModel> _weekendDays = new();
    private List<DateTime> _workDays = new();
    private string _redDaysText = string.Empty;
    private string _message = string.Empty;
    private string _messageType = string.Empty;

    private async Task HandleValidSubmit()
    {
        var result = await FreedomService.GetDaysAsync(_dateRange.StartDate, _dateRange.EndDate);
        if (!string.IsNullOrWhiteSpace(result.Message))
        {
            _message = result.Message;
            _messageType = result.MessageType.ToString().ToLower();
        }
        else
        {
            _message = string.Empty;
            _messageType = string.Empty;
        }

        _redDays = result.RedDays;
        _weekendDays = result.WeekendDays;
        _workDays = result.WorkDays;
        _redDaysText = $"Lediga dagar ({_redDays.Count})";
    }

    private async Task CopyWorkingDays()
    {
        var workingDaysString = string.Join(Environment.NewLine, _workDays.Select(d => d.ToString("yyyy-MM-dd")));
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", workingDaysString);
    }

    protected override async Task OnInitializedAsync()
    {
        _redDays = await FreedomService.GetDaysAsync();
        _redDaysText = $"Röda dagar kvar {DateTime.Now.Year} ({_redDays.Count})";
    }
}
